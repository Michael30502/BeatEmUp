Index: src/main/java/BeatEmUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import processing.core.PApplet;\r\n\r\npublic class BeatEmUp extends PApplet {\r\n\r\n    public static void main(String[] args ) {\r\n        PApplet.main(\"BeatEmUp\");\r\n    }\r\n\r\n    ImageLoader imgLoad = new ImageLoader(this);\r\n\r\n    Player player = new Player(this,imgLoad);\r\n    NEnemy nEnemy = new NEnemy(this);\r\n\r\n\r\n\r\n    @Override\r\n    public void setup() {\r\n        super.setup();\r\n        imgLoad.loadImage();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void settings() {\r\n        super.settings();\r\n        size(1000,1000);\r\n    }\r\n\r\n    @Override\r\n    public void draw() {\r\n        clear();\r\n        nEnemy.display();\r\n        nEnemy.move(player);\r\n        player.draw();\r\n        nEnemy.hit(player);\r\n\r\n\r\n    }\r\n    public void keyPressed(){\r\n\r\n        player.controls(key,keyCode,true);\r\n}\r\n\r\npublic void keyReleased(){\r\n\r\n    player.controls(key,keyCode,false);\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/BeatEmUp.java	(revision 28a01e4e2ad1047f02512aa7fa100aac3b95922d)
+++ src/main/java/BeatEmUp.java	(date 1618065316594)
@@ -1,5 +1,7 @@
 import processing.core.PApplet;
 
+import java.util.ArrayList;
+
 public class BeatEmUp extends PApplet {
 
     public static void main(String[] args ) {
@@ -7,7 +9,7 @@
     }
 
     ImageLoader imgLoad = new ImageLoader(this);
-
+    ArrayList<Enemy> enemyList = new ArrayList<Enemy>();
     Player player = new Player(this,imgLoad);
     NEnemy nEnemy = new NEnemy(this);
 
Index: src/main/java/NEnemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import processing.core.PApplet;\r\nimport processing.core.PVector;\r\n\r\npublic class NEnemy extends Collision implements Enemy{\r\n\r\nPApplet p;\r\nPVector position = new PVector();\r\nPVector velocity = new PVector(0,0);\r\nfloat sizeX = 50,sizeY=100;\r\n    float angleRight;\r\n    float angleLeft;\r\n    int health = 100;\r\n    int timer = 30;\r\nNEnemy(PApplet p){\r\n    this.p = p;\r\n    position.set(600,600);\r\n}\r\n    @Override\r\n    public void display() {\r\n        p.rect(position.x,position.y,sizeX,sizeY);\r\n    }\r\n\r\n    @Override\r\n    public void attack(Player s) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void move(Player s) {\r\n      float diffXRight = s.position.x+s.playerWidth -position.x;\r\n      float diffY = s.position.y - position.y;\r\n      float diffXLeft= s.position.x -position.x;\r\n\r\n      angleRight = (float) Math.atan2(diffY, diffXRight);\r\n      angleLeft = (float) Math.atan2(diffY, diffXLeft);\r\n        if(angleRight<angleLeft) {\r\n            velocity.x = (float) (1 * Math.cos(angleRight));\r\n            velocity.y = (float) (1 * Math.sin(angleRight));\r\n        }\r\n        if(angleRight>angleLeft) {\r\n            velocity.x = (float) (1 * Math.cos(angleLeft));\r\n            velocity.y = (float) (1 * Math.sin(angleLeft));\r\n        }\r\n        if(s.scale==1) {\r\n            if (collisionBetweenEnemyAndPlayer1(s.position.x, s.position.y, s.playerWidth, s.playerHeight, position.x, position.y, sizeX, sizeY)) {\r\n                velocity = new PVector(0, 0);\r\n            }\r\n        }\r\n        if(s.scale==-1){\r\n            if (collisionBetweenEnemyAndPlayer2(s.position.x, s.position.y, s.playerWidth, s.playerHeight, position.x, position.y, sizeX, sizeY)) {\r\n                velocity = new PVector(0, 0);\r\n            }\r\n        }\r\n\r\n        p.println(timer);\r\n   //    p.println(collisionBetweenEnemyAndPlayer(s.position.x,s.position.y,s.position.x+s.playerWidth,s.playerHeight,position.x,position.y,sizeX,sizeY));\r\n    position.add(velocity);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void hit(Player s) {\r\n    timer+=1;\r\n    for(int i=0; i<s.attackZoneArray.size();i++)\r\n        if (s.attackZones) {\r\n            if (collision(s.attackZoneArray.get(i).zonePosition.x, s.attackZoneArray.get(i).zonePosition.y, s.attackZoneArray.get(i).zoneWidth, s.attackZoneArray.get(i).zoneHeight, position.x, position.y, sizeX, sizeY)) {\r\n                if (s.damage = true&&timer>=30) {\r\n                    health -= 20;\r\n                    timer=0;\r\n                }\r\n            }\r\n        }\r\n        if(health<=0){\r\n            position.x =5000;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/NEnemy.java	(revision 28a01e4e2ad1047f02512aa7fa100aac3b95922d)
+++ src/main/java/NEnemy.java	(date 1618065672638)
@@ -52,7 +52,7 @@
             }
         }
 
-        p.println(timer);
+
    //    p.println(collisionBetweenEnemyAndPlayer(s.position.x,s.position.y,s.position.x+s.playerWidth,s.playerHeight,position.x,position.y,sizeX,sizeY));
     position.add(velocity);
 
@@ -61,17 +61,22 @@
     @Override
     public void hit(Player s) {
     timer+=1;
-    for(int i=0; i<s.attackZoneArray.size();i++)
+    for(int i=0; i<s.attackZoneArray.size();i++) {
+
         if (s.attackZones) {
             if (collision(s.attackZoneArray.get(i).zonePosition.x, s.attackZoneArray.get(i).zonePosition.y, s.attackZoneArray.get(i).zoneWidth, s.attackZoneArray.get(i).zoneHeight, position.x, position.y, sizeX, sizeY)) {
-                if (s.damage = true&&timer>=30) {
+                if (s.damage = true && timer >= 30) {
                     health -= 20;
-                    timer=0;
+                    timer = 0;
                 }
             }
         }
+
+    }
+
         if(health<=0){
             position.x =5000;
         }
+
     }
 }
